@charset "UTF-8";

$default-transition-time: 0.5s;
$default-transition-pattern: cubic-bezier(0.3, 0.3, 0.02, 1);

@mixin transition($params...) {
	-webkit-transition: $params;
	-moz-transition: $params;
	transition: $params;
}

@mixin keyframes($animation-name) {
	@-webkit-keyframes #{$animation-name} {
		@content;
	}
	@-moz-keyframes #{$animation-name} {
		@content;
	}
	@-ms-keyframes #{$animation-name} {
		@content;
	}
	@-o-keyframes #{$animation-name} {
		@content;
	}
	@keyframes #{$animation-name} {
		@content;
	}
}

@mixin animation($str) {
	-webkit-animation: #{$str};
	-moz-animation: #{$str};
	-o-animation: #{$str};
	animation: #{$str};
}

.visibility {
	overflow: hidden;
	max-height: 100vh;
}
.visibility-inv {
	overflow: hidden;
	max-height: 0;
}
.trigger {
	display: none;
}

.welcome,
.searching,
.found {
	height: 0;
	text-align: center;
}

.spacer {
	height: 200px;
}
.other-spacer {
	height: 30px;
}
.icon-space {
	display: inline-block;
	width: 10px;

	~i {
		margin-left: 3px;
	}
}

$transition-total: 0;
$transition-std: 0.6s;
.welcome {
	h1 { margin-top: 0; }
	.spacer {
		height: 100px;
		@include transition(height $transition-std $default-transition-pattern);
	}
	.visibility {
		@include transition(max-height 0s linear $transition-std);
	}
	@include transition(opacity $transition-std $default-transition-pattern);
}
$transition-total: $transition-total + $transition-std;

.searching {
	opacity: 0;
	.spacer {
		@include transition(height $transition-std $default-transition-pattern $transition-total);
	}
	@include transition(opacity $transition-std $default-transition-pattern $transition-total);
}
$transition-total: $transition-total + $transition-std;

#results-trigger:checked ~ .welcome{
	opacity: 0;
	.visibility { max-height: 0; }
	.spacer { height: 0; }
}

$animation-fadeout-wait: 3s;
$transition-total: $transition-total + $animation-fadeout-wait;
#results-trigger:checked ~ .searching {
	opacity: 1;
	@include animation(searching-fadeout $transition-std $default-transition-pattern $transition-total forwards);
	.spacer {
		height: 100px;
		@include animation(searching-height $transition-std $default-transition-pattern $transition-total forwards);
	}

	$transition-total: $transition-total + $transition-std;

	.visibility-inv {
		max-height: 100vh;
		@include animation(searching-visibility $transition-std $default-transition-pattern $transition-total forwards);
	}
}

$animation-found-wait: 1s;
$transition-total: $transition-total + $transition-std;

.found {
	opacity: 0;
	@include transition(opacity $transition-std $default-transition-pattern $transition-total);
	.spacer {
		@include transition(height $transition-std $default-transition-pattern $transition-total);
	}
}
$transition-total: $transition-total + $transition-std + $animation-found-wait;
.results {
	opacity: 0;
	.spacer { height: 100px; }
	.visibility-inv {
		max-height: 0;
		@include transition(max-height 0s linear ($transition-total + $transition-std - 0.1));
	}
}
.bbar,
.recommended,
.everythingelse { opacity: 0; }

.progress-bar {
	margin-left: -100%;
}


#results-trigger:checked ~.found {
	opacity: 1;
	.spacer {
		height: 100px;
		@include animation(searching-height $transition-std $default-transition-pattern $transition-total forwards);
	}
	.visibility-inv { max-height: 300px; }
}
#results-trigger:checked ~ .results {
	opacity: 1;

	.visibility-inv {
		max-height: 2000px;
	}
	$transition-total: $transition-total + $transition-std;

	.recommended {
		@include animation(bar-animate $transition-std $default-transition-pattern $transition-total forwards);
	}
	$animate-bar-delay: 0.5s;
	@for $i from 0 through 4 {
		.bar-#{$i} {
			@include animation(bar-animate $transition-std $default-transition-pattern ($transition-total + $animate-bar-delay + ($i * 0.1)) forwards);

			.progress-bar {
				@include animation(bar-margin $transition-std $default-transition-pattern ($transition-total + $animate-bar-delay + ($i * 0.1) + 0.2s) forwards);
			}
		}
	}

	$transition-total: $transition-total + $transition-std + $animate-bar-delay;

	.everythingelse {
		@include animation(bar-animate $transition-std $default-transition-pattern $transition-total forwards);
	}

	@for $i from 5 through 30 {
		.bar-#{$i} {
			@include animation(bar-animate $transition-std $default-transition-pattern ($transition-total + $animate-bar-delay + (($i - 5) * 0.1)) forwards);

			.progress-bar {
				@include animation(bar-margin $transition-std $default-transition-pattern ($transition-total + $animate-bar-delay + (($i - 5) * 0.1) + 0.2s) forwards);
			}
		}
	}
}


@include keyframes(searching-fadeout) {
	0% { opacity: 1; }
	100% { opacity: 0; }
}
@include keyframes(searching-visibility) {
	0% { max-height: 100vh; }
	100% { max-height: 0; }
}
@include keyframes(searching-height) {
	0% { height: 100px; }
	100% { height: 0; }
}
@include keyframes(bar-animate) {
	0% { opacity: 0; }
	100% { opacity: 1; }
}
@include keyframes(bar-margin) {
	0% { margin-left: -100%; }
	100% { margin-left: 0; }
}